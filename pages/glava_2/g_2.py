import streamlit as st

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ì–ª–∞–≤–∞ 2", # –¢–µ–∫—Å—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    page_icon='üìï',       # –ò–∫–æ–Ω–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    layout="wide",        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—é —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    initial_sidebar_state="collapsed",  # –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
)

# –¢–µ–∫—Å—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.columns(3)[1].header("üë©üèª‚Äçüíª–ü—Ä–∏–º–µ—Ä—ã –≥–ª–∞–≤—ã 2")

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
cont_1 = st.container(width=300)
with cont_1:
    # –†–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Å–ø–∏—Å–æ–∫
    options = st.selectbox("–õ–∏—Å—Ç–∏–Ω–≥–∏ –≥–ª–∞–≤—ã 2",
        ("–õ–∏—Å—Ç–∏–Ω–≥ 2.1", "–õ–∏—Å—Ç–∏–Ω–≥ 2.2", "–õ–∏—Å—Ç–∏–Ω–≥ 2.3", "–õ–∏—Å—Ç–∏–Ω–≥ 2.4",
         "–õ–∏—Å—Ç–∏–Ω–≥ 2.5", "–õ–∏—Å—Ç–∏–Ω–≥ 2.6", "–õ–∏—Å—Ç–∏–Ω–≥ 2.7", "–õ–∏—Å—Ç–∏–Ω–≥ 2.8"),
        index=None,
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç–∏–Ω–≥..."
    )

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
cont_2 = st.container()
with cont_2:
    if options is None:
        st.write('–õ–∏—Å—Ç–∏–Ω–≥ –Ω–µ –≤—ã–±—Ä–∞–Ω')
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.1":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.1 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import pandas as pd
            import altair as alt
            from numpy.random import default_rng as rng
            from PIL import Image

            # –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
            st.write("–í—ã–≤–æ–¥ –ø—Ä–æ—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏")

            # –°—Ç—Ä–æ–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π
            st.write("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, *Streamlit!* :sunglasses:")

            # –í—ã–≤–æ–¥ —á–∏—Å–ª–∞
            st.write(1234)

            # –í—ã–≤–æ–¥ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö Pandas
            df = pd.DataFrame(
                {
                    "–ö–æ–ª–æ–Ω–∫–∞ 1": [1, 2, 3, 4],
                    "–ö–æ–ª–æ–Ω–∫–∞ 2": [10, 20, 30, 40],
                }
            )
            st.write(df)

            # –í—ã–≤–æ–¥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            st.write("1 + 1 = ", 2)
            st.write("–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã:", df, "–¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ —Ç–∞–±–ª–∏—Ü—ã")

            # –í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞
            df = pd.DataFrame(rng(0).standard_normal((200, 3)), columns=["a", "b", "c"])
            chart = (
                alt.Chart(df)
                .mark_circle()
                .encode(x="a", y="b", size="c", color="c", tooltip=["a", "b", "c"])
            )
            st.write(chart)

            # –í—ã–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            img = Image.open('static/AP_400.png')
            st.write(img)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.2":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.2 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import time
            import numpy as np
            import pandas as pd
            import streamlit as st
            from PIL import Image

            txt = """
            –§—É–Ω–∫—Ü–∏—è st.write_stream –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ Streamlit –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ 
            –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ –ø–æ—Ç–æ–∫–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–∏. 
            –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç 
            –ø–æ –º–µ—Ä–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
            """

            def stream_data():
                # –í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
                for word in txt.split(" "):
                    yield word + " "
                    time.sleep(0.10)

                # –í—ã–≤–æ–¥ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
                yield pd.DataFrame(
                    np.random.randn(5, 10),
                    columns=["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"],
                )

                # –í—ã–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                yield Image.open('static/AP_400.png')


            if st.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã"):
                st.write_stream(stream_data)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.3":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.3 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import matplotlib.pyplot as plt
            import numpy as np
            import pandas as pd

            # –í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
            '''
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            –≠—Ç–æ —Ç–µ–∫—Å—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º _markdown_.
            '''

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
            df = pd.DataFrame({'–î–∞–Ω–Ω—ã–µ': [1, 2, 3]})
            "–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞ —Ç–∞–±–ª–∏—Ü—ã"
            df  # –í—ã–≤–æ–¥ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            x = 10
            'x=', x  # –í—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ X

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π matplotlib
            arr = np.random.normal(1, 1, size=100)
            fig, ax = plt.subplots()
            ax.hist(arr, bins=20)

            '–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞ –≥—Ä–∞—Ñ–∏–∫–∞'
            fig  # –í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞ matplotlib
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.4":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.4 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –≠–ª–µ–º–µ–Ω—Ç—ã title
            st.title("–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            st.title("_–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∏–≤ —Å –∏–∫–æ–Ω–∫–æ–π_ :sunglasses:")
            st.title(":blue[–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ü–≤–µ—Ç–Ω–æ–π]")

            # –≠–ª–µ–º–µ–Ω—Ç—ã header
            st.header("_–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∏–≤_ :blue[—Ü–≤–µ—Ç–Ω–æ–π] —Å –∏–∫–æ–Ω–∫–æ–π :sunglasses:")
            st.header("–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Å–µ—Ä—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º", divider="gray")
            st.header("–ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–∏–Ω–∞–º–∏—á–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏")
            st.header("–ó–∞–≥–æ–ª–æ–≤–æ–∫ 1", divider=True)
            st.header("–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2", divider=True)
            st.header("–ó–∞–≥–æ–ª–æ–≤–æ–∫ 3", divider=True)

            # –≠–ª–µ–º–µ–Ω—Ç—ã subheader
            st.subheader("_–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∏–≤_ :blue[—Ü–≤–µ—Ç–Ω–æ–π] —Å –∏–∫–æ–Ω–∫–æ–π :sunglasses:")
            st.subheader("–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å–µ—Ä—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º", divider="gray")
            st.subheader("–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–∏–Ω–∞–º–∏—á–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏")
            st.subheader("–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ 1", divider=True)
            st.subheader("–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ 2", divider=True)
            st.subheader("–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ 3", divider=True)

            # –≠–ª–µ–º–µ–Ω—Ç—ã markdown
            st.markdown("*Streamlit* –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ **'–∫—Ä—É—Ç–æ–π'** ***–§—Ä–µ–π–º–≤–æ—Ä–∫!!!***.")

            st.markdown('''
                :red[Streamlit] :orange[–º–æ–∂–µ—Ç] :green[–≤—ã–≤–æ–¥–∏—Ç—å] :blue[—Ç–µ–∫—Å—Ç] :violet[–≤]
                :gray[—Ä–∞–∑–ª–∏—á–Ω—ã—Ö] :rainbow[—Ü–≤–µ—Ç–∞—Ö] –∏ :blue-background[–≤—ã–¥–µ–ª—è—Ç—å —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º].''')

            st.markdown("–ê —ç—Ç–æ –±—É–∫–µ—Ç –∏–∑ –∏–∫–æ–Ω–æ–∫ &mdash;\
                        :tulip::cherry_blossom::rose::hibiscus::sunflower::blossom:")

            multi = '''–ï—Å–ª–∏ –≤—ã –≤ –∫–æ–¥–µ –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É,
            —Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π.

            –î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É.
            '''
            st.markdown(multi)

            # –¢–µ–∫—Å—Ç –º–µ–ª–∫–∏–º —à—Ä–∏—Ñ—Ç–æ–º
            st.markdown(':small[–¢–µ–∫—Å—Ç –º–µ–ª–∫–∏–º —à—Ä–∏—Ñ—Ç–æ–º]')
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.5":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.5 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import base64
            import streamlit as st

            # –ó–∞–¥–∞—Ç—å –∏–º—è PDF —Ñ–∞–π–ª–∞
            pdf_file = 'pdf/Python_vsem.pdf'

            # –û—Ç–∫—Ä—ã—Ç—å PDF —Ñ–∞–π–ª
            with open(pdf_file, "rb") as f:
                base64_pdf = base64.b64encode(f.read()).decode('utf-8')

            # –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ HTML
            pdf_display = (F'<embed src="data:application/pdf;base64,{base64_pdf}"'
                           F' width="1000" height="800" type="application/pdf">')

            st.subheader(":blue[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF —Ñ–∞–π–ª–∞ —Å –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ–º]")

            # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF —Ñ–∞–π–ª–∞
            st.markdown(body=pdf_display, unsafe_allow_html=True)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.6":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.6 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –≠–ª–µ–º–µ–Ω—Ç st.badge
            st.badge("–ë–µ–π–¥–∂–∏–∫")
            st.badge("–ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ", icon=":material/check:", color="green")

            # –ù–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–∫–æ–≤ —Ä—è–¥–æ–º
            st.markdown(
                ":violet-badge[:material/star: –õ—É—á—à–∏–π —Ñ–∏–ª—å–º] :orange-badge[‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ]"
                " :material/chronic: :gray-badge[–ù–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏]"
            )
            st.divider()  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            # –≠–ª–µ–º–µ–Ω—Ç st.caption
            st.caption("–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –ø—Ä–∏–º–µ—Ä–æ–º —Ç–µ–∫—Å—Ç–∞ –º–µ–ª–∫–∏–º —à—Ä–∏—Ñ—Ç–æ–º.")
            st.caption("–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º _italics_ :blue[—Å–∏–Ω–µ–≥–æ —Ü–≤–µ—Ç–∞] –∏ —Å —ç–º–æ–¥–∑–∏ :sunglasses:")
            st.divider()  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            # –≠–ª–µ–º–µ–Ω—Ç st.code
            code = '''
            def hello():
                print("–ü—Ä–∏–≤–µ—Ç Streamlit!")
                for i range(10):
                    print('–®–∞–≥ —Ü–∏–∫–ª–∞-", i)
            '''
            st.code(code, language="python", line_numbers=True)
            st.divider()  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            # –≠–ª–µ–º–µ–Ω—Ç st.echo (–ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥ –ø–æ—Å–ª–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
            with st.echo(code_location="below"):
                st.write('–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')
            st.divider()

            # –≠–ª–µ–º–µ–Ω—Ç st.echo (–ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥ –ø–µ—Ä–µ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
            with st.echo(code_location="above"):
                # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç—Ç–æ–≥–æ –±–ª–æ–∫–∞, –±—É–¥–µ—Ç –∫–∞–∫ –≤—ã–≤–µ–¥–µ–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ, —Ç–∞–∫ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                def get_user_name(code_location="above" or "below"):
                    return '–í–∏–∫—Ç–æ—Ä!'

                greeting = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, "
                value = get_user_name()
                st.write(greeting, value)
            st.divider()  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            go = '–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã'
            st.write(go)
            st.divider()  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            # –≠–ª–µ–º–µ–Ω—Ç st.echo
            st.latex(r'''
                a + ar + a r^2 + a r^3 + \cdots + a r^{n-1} =
                \sum_{k=0}^{n-1} ar^k =
                a \left(\frac{1-r^{n}}{1-r}\right)
                ''')
            st.divider()  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            # –≠–ª–µ–º–µ–Ω—Ç st.text
            st.text("–≠—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞.\n [–≠—Ç–æ –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞, ](–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏).")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.7":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.7 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            st.markdown("## –≠–ª–µ–º–µ–Ω—Ç st.help")
            st.text('–°–ø—Ä–∞–≤–∫–∞ –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ st.title')
            st.help(st.title)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 2.8":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 2.8 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            st.markdown("#### –≠–ª–µ–º–µ–Ω—Ç st.html")

            st.html("<h1><span style='color:blue;'>–ó–∞–≥–æ–ª–æ–≤–æ–∫ H1 (—Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º)</span></h1>")
            st.html("<style> h1 {color: red;}</style>"
                    "<body><h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫ H1 –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º</h1></body>")