import streamlit as st

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ì–ª–∞–≤–∞ 9", # –¢–µ–∫—Å—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    page_icon='üìï',       # –ò–∫–æ–Ω–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    layout="wide",        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—é —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    initial_sidebar_state="collapsed",  # –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
)

# –¢–µ–∫—Å—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.columns(3)[1].header("üë©üèª‚Äçüíª–ü—Ä–∏–º–µ—Ä—ã –≥–ª–∞–≤—ã 9")

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
cont_1 = st.container(width=300)
with cont_1:
    # –†–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Å–ø–∏—Å–æ–∫
    options = st.selectbox("–õ–∏—Å—Ç–∏–Ω–≥–∏ –≥–ª–∞–≤—ã 9",
        ("–õ–∏—Å—Ç–∏–Ω–≥ 9.1", "–õ–∏—Å—Ç–∏–Ω–≥ 9.2", "–õ–∏—Å—Ç–∏–Ω–≥ 9.3", "–õ–∏—Å—Ç–∏–Ω–≥ 9.4",
         "–õ–∏—Å—Ç–∏–Ω–≥ 9.5", "–õ–∏—Å—Ç–∏–Ω–≥ 9.6", "–õ–∏—Å—Ç–∏–Ω–≥ 9.7", "–õ–∏—Å—Ç–∏–Ω–≥ 9.8",
         "–õ–∏—Å—Ç–∏–Ω–≥ 9.9", "–õ–∏—Å—Ç–∏–Ω–≥ 9.10"),
        index=None,
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç–∏–Ω–≥..."
    )

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
cont_2 = st.container()
with cont_2:
    if options is None:
        st.write('–õ–∏—Å—Ç–∏–Ω–≥ –Ω–µ –≤—ã–±—Ä–∞–Ω')
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.1":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.1 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import pandas as pd
            import streamlit as st
            from numpy.random import default_rng as rng

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            df = pd.DataFrame(
                rng(0).standard_normal((50, 20)),
                columns=("col %d" % i for i in range(20))
            )

            st.write('–ü—Ä–æ—Å—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º st.dataframe')
            st.dataframe(df)

            # –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            df = pd.DataFrame(
                {
                    "name": ["–ù–æ–≤–æ–µ –≤ Streamlit", "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Extras", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–æ–∫"],
                    "url": [
                        "https://roadmap.streamlit.app",
                        "https://extras.streamlit.app",
                        "https://issues.streamlit.app",
                    ],
                    "stars": rng(0).integers(0, 1000, size=3),
                    "views_history": rng(0).integers(0, 5000, size=(3, 30)).tolist(),
                }
            )

            st.write('–¢–∞–±–ª–∏—Ü–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º st.dataframe –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–ª–æ–Ω–æ–∫')
            st.dataframe(
                df,
                column_config={
                    "name": "–ò–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                    "stars": st.column_config.NumberColumn(
                        "–ó–≤–µ–∑–¥—ã Github",
                        help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –Ω–∞ GitHub",
                        format="%d ‚≠ê",
                    ),
                    "url": st.column_config.LinkColumn("URL –∞–¥—Ä–µ—Å"),
                    "views_history": st.column_config.LineChartColumn(
                        "–ü—Ä–æ—Å–º–æ—Ç—Ä—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π)", y_min=0, y_max=5000
                    ),
                },
                hide_index=True,
            )
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.2":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.2 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import pandas as pd
            import streamlit as st

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            df = pd.DataFrame(
                [
                    {"–ö–æ–Ω—Ñ–µ—Ç—ã": "–ë–µ–ª–æ—á–∫–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≥—Ä.)": 300, "–í–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞–±–æ—Ä": True},
                    {"–ö–æ–Ω—Ñ–µ—Ç—ã": "–ú–∏—à–∫–∞ –∫–æ—Å–æ–ª–∞–ø—ã–π", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≥—Ä.)": 500, "–í–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞–±–æ—Ä": False},
                    {"–ö–æ–Ω—Ñ–µ—Ç—ã": "–ü—Ç–∏—á—å–µ –º–æ–ª–æ–∫–æ", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≥—Ä.)": 800, "–í–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞–±–æ—Ä": True},
                    {"–ö–æ–Ω—Ñ–µ—Ç—ã": "–ì—Ä–∏–ª—å—è–∂", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≥—Ä.)": 600, "–í–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞–±–æ—Ä": False},
                    {"–ö–æ–Ω—Ñ–µ—Ç—ã": "–¢—Ä—é—Ñ–µ–ª–∏", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≥—Ä.)": 200, "–í–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞–±–æ—Ä": True},
                ]
            )
            st.write('–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º st.data_editor')
            edited_df = st.data_editor(df)

            # –í—ã–±–æ—Ä  –ª—é–±–∏–º—ã—Ö –∫–æ–Ω—Ñ–µ—Ç
            favorite = edited_df.loc[edited_df["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≥—Ä.)"].idxmax()]["–ö–æ–Ω—Ñ–µ—Ç—ã"]
            st.markdown(f"–Ø –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ª—é–±–ª—é –∫–æ–Ω—Ñ–µ—Ç—ã - **{favorite}** üëç")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.3":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.3 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import pandas as pd
            import streamlit as st
            from numpy.random import default_rng as rng

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            df = pd.DataFrame(
                rng(0).standard_normal(size=(10, 5)),
                columns=("col %d" % i for i in range(5)),
            )
            st.write('–°—Ç–∞—Ç–∏—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º st.table')
            st.table(df)

            df = pd.DataFrame(
                {
                    "–≠–ª–µ–º–µ–Ω—Ç": ["**st.table**", "*st.dataframe*"],
                    "–¢–∏–ø": ["`–°—Ç–∞—Ç–∏—á–Ω—ã–π`üßéÔ∏è", "`–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π`üèÉ‚Äç‚ôÇÔ∏è"],
                    "–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é": [
                        "[:rainbow[docs]](https://docs.streamlit.io"
                        "/develop/api-reference/data/st.dataframe)",
                        "[:open_book:](https://docs.streamlit.io"
                        "/develop/api-reference/data/st.table)",
                    ],
                }
            )

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            st.write('–°—Ç–∞—Ç–∏—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º st.table –∏ Markdown')
            st.table(df)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.4":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.4 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –î–∞–Ω–Ω—ã–µ:
            current_sales = 15000
            previous_sales = 12000
            sklad = 50
            sale = 45
            # –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞–∑–Ω–∏—Ü—É
            delta_sales = current_sales - previous_sales
            percentage_change = (delta_sales / previous_sales) * 100
            ostat = sklad - sale
            delta_kol = ostat - sklad

            st.markdown("## –≠–ª–µ–º–µ–Ω—Ç—ã st.metric")

            # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏
            st.markdown("#### –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂")
            st.metric(label="–ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏",
                      value=f"–†{current_sales}",
                      delta=f"–†{delta_sales}",
                      delta_color="normal")
            st.metric(label="–ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è",
                      value=f"{percentage_change:.2f}%",
                      delta=f"{percentage_change:.2f}%",
                      delta_color="normal",
                      width='content',
                      border=True)
            st.metric(label="–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ",
                      value=f"{ostat}",
                      delta=f"{delta_kol}",
                      delta_color="normal")

            st.markdown("## –≠–ª–µ–º–µ–Ω—Ç—ã st.metric –≤ –∫–æ–ª–æ–Ω–∫–∞—Ö")
            col1, col2, col3 = st.columns(3)
            col1.metric("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "25 ¬∞C", "3 ¬∞C", border=True)
            col2.metric("–í–µ—Ç–µ—Ä", "4 –º/—Å", "-8%", border=True)
            col3.metric("–í–ª–∞–∂–Ω–æ—Å—Ç—å", "75%", "4%", border=True)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.5":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.5 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            st.markdown("## –≠–ª–µ–º–µ–Ω—Ç st.json")
            st.json(
                {
                    "–ù–∞–ø–∏—Ç–æ–∫": "–ú–æ–ª–æ–∫–æ",
                    "–§—Ä—É–∫—Ç—ã": ["–Ø–±–ª–æ–∫–∏", "–ì—Ä—É—à–∏", "–ú–∞–Ω–¥–∞—Ä–∏–Ω—ã", ],
                    "–£—Ä–æ–≤–µ–Ω—å 1": {"–£—Ä–æ–≤–µ–Ω—å 2": {"–£—Ä–æ–≤–µ–Ω—å 3": {"–ö–ª—é—á": "–ó–Ω–∞—á–µ–Ω–∏–µ"}}},
                },
                expanded=2,
            )
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.6":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.6 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import pandas as pd
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            st.markdown("#### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∏ —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            data_df = pd.DataFrame(
                {
                    "–ö–æ–Ω—Ñ–µ—Ç—ã": ["–ë–µ–ª–æ—á–∫–∞", "–ú–∏—à–∫–∞ –Ω–∞ —Å–µ–≤–µ—Ä–µ", "–¢—Ä—é—Ñ–µ–ª–∏", "–õ–∞—Å—Ç–æ—á–∫–∞"],
                    "–£–ø–∞–∫–æ–≤–∫–∞": ["–ù–∞ –≤–µ—Å", "–ù–∞ –≤–µ—Å", "–ö–æ—Ä–æ–±–∫–∞", "–ù–∞ –≤–µ—Å"],
                    "–í–µ—Å": [200, 400, 800, 1000],
                    "–¶–µ–Ω–∞": [200, 400, 250, 600],
                }
            )

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–ª–æ–Ω–æ–∫
            col_config = {
                "–ö–æ–Ω—Ñ–µ—Ç—ã": st.column_config.Column(
                    label="–°–æ—Ä—Ç–∞ –∫–æ–Ω—Ñ–µ—Ç",
                    help="–í–≤–µ–¥–∏—Ç–µ —Å–æ—Ä—Ç –∫–æ–Ω—Ñ–µ—Ç",
                    width="medium",
                    required=True,
                ),
                "–£–ø–∞–∫–æ–≤–∫–∞": st.column_config.TextColumn(
                    label="–í–∏–¥ —É–ø–∞–∫–æ–≤–∫–∏",
                    help="–ö–∞–∫ —É–ø–∞–∫–æ–≤–∞–Ω—ã",
                    width="small",
                    required=True,
                ),
                "–í–µ—Å": st.column_config.NumberColumn(
                    label="–í–µ—Å (–≥—Ä.)",
                    help="–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å",
                    width="small",
                    required=True,
                ),
                "–¶–µ–Ω–∞": st.column_config.NumberColumn(
                    label="–¶–µ–Ω–∞ (—Ä—É–±.)",
                    help="–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É",
                    width="small",
                    required=True,
                    format="‚ÇΩ%d"
                )
            }

            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
            st.data_editor(data_df,
                           column_config=col_config,
                           hide_index=True,
                           num_rows="dynamic", )
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.7":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.7 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import pandas as pd
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            st.markdown("#### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫ –≤—ã–±–æ—Ä–∞")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            data_df = pd.DataFrame(
                {
                    "–ö–æ–Ω—Ñ–µ—Ç—ã": ["–ë–µ–ª–æ—á–∫–∞", "–ú–∏—à–∫–∞ –Ω–∞ —Å–µ–≤–µ—Ä–µ", "–¢—Ä—é—Ñ–µ–ª–∏", "–õ–∞—Å—Ç–æ—á–∫–∞"],
                    "–í–∫–ª—é—á–∏—Ç—å": [True, False, False, True],
                    "–£–ø–∞–∫–æ–≤–∫–∞": ["–ù–∞ –≤–µ—Å‚öñÔ∏è", "–ù–∞ –≤–µ—Å‚öñÔ∏è", "–ö–æ—Ä–æ–±–∫–∞üç´", "–ù–∞ –≤–µ—Å‚öñÔ∏è"],
                    "–í–µ—Å": [200, 400, 800, 1000],
                }
            )

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–ª–æ–Ω–æ–∫
            col_config = {
                "–ö–æ–Ω—Ñ–µ—Ç—ã": st.column_config.Column(
                    label="–°–æ—Ä—Ç–∞ –∫–æ–Ω—Ñ–µ—Ç",
                    help="–í–≤–µ–¥–∏—Ç–µ —Å–æ—Ä—Ç –∫–æ–Ω—Ñ–µ—Ç",
                    width="medium",
                    required=True,
                ),
                "–í–∫–ª—é—á–∏—Ç—å": st.column_config.CheckboxColumn(
                    label="–í–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞–±–æ—Ä?",
                    help="–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–∏–º—ã–µ –∫–æ–Ω—Ñ–µ—Ç—ã ü§é",
                    default=False,
                ),
                "–£–ø–∞–∫–æ–≤–∫–∞": st.column_config.SelectboxColumn(
                    label="–£–ø–∞–∫–æ–≤–∫–∞",
                    help="–í—ã–±–æ—Ä —Ç–∏–ø–∞ —É–ø–∞–∫–æ–≤–∫–∏",
                    width="medium",
                    options=["–ù–∞ –≤–µ—Å‚öñÔ∏è", "–ö–æ—Ä–æ–±–∫–∞üç´", ],
                    required=True,
                ),
                "–í–µ—Å": st.column_config.NumberColumn(
                    label="–í–µ—Å (–≥—Ä.)",
                    help="–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å",
                    width="small",
                    required=True,
                ),
            }

            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
            st.data_editor(data_df,
                           column_config=col_config,
                           hide_index=True,
                           num_rows="dynamic", )
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.8":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.8 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            from datetime import datetime
            from datetime import time
            import pandas as pd
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            st.markdown("#### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            data_df = pd.DataFrame(
                {
                    "–õ–µ–∫—Ü–∏–∏": [
                        datetime(2025, 2, 5, 8, 00),
                        datetime(2025, 2, 6, 9, 45),
                        datetime(2025, 2, 7, 11, 30), ],
                    "–ü—Ä–∞–∑–¥–Ω–∏–∫–∏": [
                        datetime(2025, 2, 23),
                        datetime(2025, 3, 8),
                        datetime(2025, 5, 1)],
                    "–í—Ä–µ–º—è": [
                        time(8, 00),
                        time(13, 00),
                        time(18, 00), ],
                }
            )

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–ª–æ–Ω–æ–∫
            col_config = {
                "–õ–µ–∫—Ü–∏–∏": st.column_config.DatetimeColumn(
                    label="–ù–∞—á–∞–ª–æ –ª–µ–∫—Ü–∏–π ‚úç",
                    min_value=datetime(2025, 2, 1),
                    max_value=datetime(2025, 6, 5),
                    format="D MMM YYYY, h:mm a ‚úç",
                    step=60, ),
                "–ü—Ä–∞–∑–¥–Ω–∏–∫–∏": st.column_config.DateColumn(
                    label="–ü—Ä–∞–∑–¥–Ω–∏–∫–∏ üéá",
                    format="D MMM YYYY", ),
                "–í—Ä–µ–º—è": st.column_config.TimeColumn(
                    label="–í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏",
                    format="HH:mm üë©üèª‚Äçüç≥", ),
            }

            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
            st.data_editor(
                data_df,
                column_config=col_config,
                hide_index=True,
            )
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.9":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.9 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import pandas as pd

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            data_df = pd.DataFrame(
                {
                    "json": [
                        {"–ù–∞–ø–∏—Ç–∫–∏": ["–ú–æ–ª–æ–∫–æ", "–ö–≤–∞—Å", "–õ–∏–º–æ–Ω–∞–¥"]},
                        {"–§—Ä—É–∫—Ç—ã": ["–Ø–±–ª–æ–∫–∏", "–ì—Ä—É—à–∏", "–ú–∞–Ω–¥–∞—Ä–∏–Ω—ã"]},
                        {"–û–≤–æ—â–∏": ["–õ—É–∫", "–ú–æ—Ä–∫–æ–≤—å", "–ö–∞–ø—É—Å—Ç–∞", ]}
                    ],
                    "–ü—Ä–æ–¥–∞–∂–∏": [
                        [10, 14, 26, 80, 90, 40],
                        [10, 20, 80, 80, 70, 10],
                        [10, 10, 20, 90, 30, 50]
                    ],
                    "–°–∞–π—Ç—ã": [
                        "https://dzen.ru",
                        "https://google.com",
                        "https://mail.ru",
                    ],
                    "img": [
                        "https://storage.googleapis.com/s4a-prod-share-preview/default/"
                        "st_app_screenshot_image/5435b8cb-6c6c-490b-9608-799b543655d3/Home_Page.png",
                        "https://storage.googleapis.com/s4a-prod-share-preview/default/"
                        "st_app_screenshot_image/ef9a7627-13f2-47e5-8f65-3f69bb38a5c2/Home_Page.png",
                        "https://storage.googleapis.com/s4a-prod-share-preview/default/"
                        "st_app_screenshot_image/31b99099-8eae-4ff8-aa89-042895ed3843/Home_Page.png",
                    ],
                }
            )

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–ª–æ–Ω–æ–∫
            conf = {
                "json": st.column_config.JsonColumn(
                    label="–î–∞–Ω–Ω—ã–µ JSON",
                    help="–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç–∞ JSON",
                    width="medium", ),
                "–ü—Ä–æ–¥–∞–∂–∏": st.column_config.ListColumn(
                    label="–ü—Ä–æ–¥–∞–∂–∏ (—Å–ø–∏—Å–æ–∫)",
                    help="–ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤",
                    width="medium", ),
                "–°–∞–π—Ç—ã": st.column_config.LinkColumn(
                    label="–°–∞–π—Ç—ã",
                    help="–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç—ã",
                ),
                "img": st.column_config.ImageColumn(
                    label="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
                    help="–°–∫—Ä–∏–Ω—à–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Streamlit"
                )
            }

            st.markdown("## –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤")
            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
            st.data_editor(
                data_df,
                column_config=conf,
                hide_index=True)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 9.10":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 9.10 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import pandas as pd
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
            data_df = pd.DataFrame(
                {
                    "sales1": [
                        [0, 4, 26, 80, 100, 40],
                        [80, 20, 80, 35, 40, 100],
                        [10, 20, 80, 80, 70, 0],
                    ],
                    "sales2": [
                        [0, 4, 26, 80, 100, 40],
                        [80, 20, 80, 35, 40, 100],
                        [10, 20, 80, 80, 70, 0],
                    ],
                    "sales3": [
                        [0, 4, 26, 80, 100, 40],
                        [80, 20, 80, 35, 40, 100],
                        [10, 20, 80, 80, 70, 0],
                    ],
                    "sales4": [200, 550, 1000],
                }
            )

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–ª–æ–Ω–æ–∫
            conf = {
                "sales1": st.column_config.AreaChartColumn(
                    label="–ì—Ä–∞—Ñ–∏–∫ –æ–±–ª–∞—Å—Ç–µ–π",
                    width="small",
                    help="–ü—Ä–æ–¥–∞–∂–∏ –∑–∞ 6 –º–µ—Å. —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º –æ–±–ª–∞—Å—Ç–∏",
                    y_min=0,
                    y_max=400,
                ),
                "sales2": st.column_config.LineChartColumn(
                    label="–ì—Ä–∞—Ñ–∏–∫ –ª–∏–Ω–∏–π)",
                    width="small",
                    help="–ü—Ä–æ–¥–∞–∂–∏ –∑–∞ 6 –º–µ—Å. (–ª–∏–Ω–∏—è)",
                    y_min=0,
                    y_max=100,
                ),
                "sales3": st.column_config.BarChartColumn(
                    label="–°—Ç–æ–ª–±—á–∞—Ç—ã–π –≥—Ä–∞—Ñ–∏–∫ ",
                    width="small",
                    help="–ü—Ä–æ–¥–∞–∂–∏ –∑–∞ 6 –º–µ—Å. (—Å—Ç–æ–ª–±—á–∞—Ç—ã–π –≥—Ä–∞—Ñ–∏–∫))",
                    y_min=0,
                    y_max=100,
                ),
                "sales4": st.column_config.ProgressColumn(
                    label="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä (–æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂)",
                    help="–û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ (–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä)",
                    format="‚ÇΩ%f",
                    min_value=0,
                    max_value=1000,
                ),
            }

            st.markdown("## –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏")
            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
            st.data_editor(
                data_df,
                column_config=conf,
                hide_index=True,
                row_height=100
            )
