import streamlit as st

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ì–ª–∞–≤–∞ 5", # –¢–µ–∫—Å—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    page_icon='üìï',       # –ò–∫–æ–Ω–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    layout="wide",        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—é —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    initial_sidebar_state="collapsed",  # –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
)

# –¢–µ–∫—Å—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.columns(3)[1].header("üë©üèª‚Äçüíª–ü—Ä–∏–º–µ—Ä—ã –≥–ª–∞–≤—ã 5")

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
cont_1 = st.container(width=300)
with cont_1:
    # –†–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Å–ø–∏—Å–æ–∫
    options = st.selectbox("–õ–∏—Å—Ç–∏–Ω–≥–∏ –≥–ª–∞–≤—ã 5",
        ("–õ–∏—Å—Ç–∏–Ω–≥ 5.1", "–õ–∏—Å—Ç–∏–Ω–≥ 5.2", "–õ–∏—Å—Ç–∏–Ω–≥ 5.3", "–õ–∏—Å—Ç–∏–Ω–≥ 5.4",
         "–õ–∏—Å—Ç–∏–Ω–≥ 5.5", "–õ–∏—Å—Ç–∏–Ω–≥ 5.6", "–õ–∏—Å—Ç–∏–Ω–≥ 5.7", "–õ–∏—Å—Ç–∏–Ω–≥ 5.8",
         "–õ–∏—Å—Ç–∏–Ω–≥ 5.9", "–õ–∏—Å—Ç–∏–Ω–≥ 5.10", "–õ–∏—Å—Ç–∏–Ω–≥ 5.11", "–õ–∏—Å—Ç–∏–Ω–≥ 5.12",
         "–õ–∏—Å—Ç–∏–Ω–≥ 5.13", "–õ–∏—Å—Ç–∏–Ω–≥ 5.14", "–õ–∏—Å—Ç–∏–Ω–≥ 5.15", "–õ–∏—Å—Ç–∏–Ω–≥ 5.16"),
        index=None,
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç–∏–Ω–≥..."
    )

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
cont_2 = st.container()
with cont_2:
    if options is None:
        st.write('–õ–∏—Å—Ç–∏–Ω–≥ –Ω–µ –≤—ã–±—Ä–∞–Ω')
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.1":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.1 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            from numpy.random import default_rng as rng

            # –¢—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ - –∫–æ–ª–æ–Ω–∫–∏
            col1, col2, col3 = st.columns(3)

            # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ 1-–π –∫–æ–ª–æ–Ω–∫–∏
            with col1:
                st.header("–ö–æ—à–∫–∞")
                st.image("https://static.streamlit.io/examples/cat.jpg")

            # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ 2-–π –∫–æ–ª–æ–Ω–∫–∏
            with col2:
                st.header("–°–æ–±–∞–∫–∞")
                st.image("https://static.streamlit.io/examples/dog.jpg")

            # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ 3-–π –∫–æ–ª–æ–Ω–∫–∏
            with col3:
                st.header("–°–æ–≤–∞")
                st.image("https://static.streamlit.io/examples/owl.jpg")

            # –ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö DataFrame
            df = rng(0).standard_normal((5, 1))
            # –î–≤–µ –∫–æ–ª–æ–Ω–∫–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —à–∏—Ä–∏–Ω—ã
            col1, col2 = st.columns([3, 1], border=True)

            # –í—Å—Ç–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –≤ 1-—é –∫–æ–ª–æ–Ω–∫—É
            col1.subheader("–®–∏—Ä–æ–∫–∞—è –∫–æ–ª–æ–Ω–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º")
            col1.line_chart(df)

            # –í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–æ 1-—é –∫–æ–ª–æ–Ω–∫—É
            col2.subheader("–£–∑–∫–∞—è –∫–æ–ª–æ–Ω–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏")
            col2.write(df)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.2":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.2 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import numpy as np

            st.text('–≠–ª–µ–º–µ–Ω—Ç—ã st.container')

            # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä 1
            ct_1 = st.container(border=True)
            with ct_1:
                st.write("–≠—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ - ct-1")
                st.bar_chart(np.random.randn(20, 3))
            st.write("–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞")

            # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä 2
            ct_2 = st.container(border=True)
            ct_2.write("–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ct-2")
            ct_2.write("–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Ç–æ–∂–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ct-2")

            # –ì—Ä—É–ø–ø–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
            st.write("–ì—Ä—É–ø–ø–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –∏–∫–æ–Ω–∫–∞–º–∏")
            row1 = st.columns(3)
            row2 = st.columns(3)
            for col in row1 + row2:
                tile = col.container(height=120)
                tile.title(":balloon:")

            # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
            st.write("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π")
            long_text = "–≠—Ç–æ —Ç–µ–∫—Å—Ç. " * 100
            with st.container(height=200):
                st.markdown(long_text)

            # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏
            st.write("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ct-3 —Å –∫–Ω–æ–ø–∫–∞–º–∏")
            ct_3 = st.container(border=True,
                                horizontal=True,
                                horizontal_alignment="right")
            for i in range(3):
                ct_3.button(f"–ö–Ω–æ–ø–∫–∞ {i + 1}")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.3":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.3 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            st.text('–≠–ª–µ–º–µ–Ω—Ç st.dialog')


            # —Ñ—É–Ω–∫—Ü–∏—è - –¥–∏–∞–ª–æ–≥
            @st.dialog("–î–∏–∞–ª–æ–≥ - –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞")
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            def vote(item):
                st.write(f"–ü–æ—á–µ–º—É –≤—ã –≤—ã–±—Ä–∞–ª–∏ {item}?")
                reason = st.text_input("–ü–æ—Ç–æ–º—É, —á—Ç–æ...")
                if st.button("–û—Ç–≤–µ—Ç–∏—Ç—å"):
                    st.session_state.vote = {"item": item, "reason": reason}
                    st.rerun()


            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if "vote" not in st.session_state:
                st.write("–ö–∞–∫–æ–π —Ü–≤–µ—Ç –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?")
                if st.button("–ö—Ä–∞—Å–Ω—ã–π"):
                    vote("–ö—Ä–∞—Å–Ω—ã–π")
                if st.button("–°–∏–Ω–∏–π"):
                    vote("–°–∏–Ω–∏–π")
            else:
                st.text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {st.session_state.vote['item']} –ø–æ—Ç–æ–º—É, "
                        f"—á—Ç–æ {st.session_state.vote['reason']}")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.4":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.4 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import time

            st.text('–¢–∞–π–º–µ—Ä —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º st.empty')
            with st.empty():
                for seconds in range(10):
                    st.write(f"‚è≥ –ü—Ä–æ—à–ª–æ {seconds} —Å–µ–∫—É–Ω–¥")
                    time.sleep(1)
                st.write(":material/check: –ü—Ä–æ—à–ª–æ 10 —Å–µ–∫—É–Ω–¥!")

            bt = st.button("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä")
            if bt:
                st.empty()
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.5":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.5 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import time

            st.text('–§—É–Ω–∫—Ü–∏—è st.empty —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º container')

            # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            st.button("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å")

            # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            placeholder = st.empty()

            # –í—ã–≤–æ–¥ –≤ –ø—É—Å—Ç—É—é –æ–±–ª–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞
            placeholder.markdown("–°—Ç–∞—Ä—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã")
            time.sleep(3)

            # –í—ã–≤–æ–¥ –≤ –ø—É—Å—Ç—É—é –æ–±–ª–∞—Å—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            placeholder.progress(0, "–ñ–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å ...")
            time.sleep(2)
            placeholder.progress(50, "–ñ–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å ...")
            time.sleep(2)
            placeholder.progress(100, "–ñ–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å ...")
            time.sleep(2)

            # –°–æ–∑–¥–∞–Ω–∏–µ –≤ –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            with placeholder.container():
                st.line_chart({"data": [1, 5, 2, 6]})
                time.sleep(1)
                st.markdown("3...")
                time.sleep(1)
                st.markdown("2...")
                time.sleep(1)
                st.markdown("1...")
                time.sleep(1)
                # –í—ã–≤–æ–¥ –≤ –ø—É—Å—Ç—É—é –æ–±–ª–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞
                st.markdown("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
                time.sleep(5)

            # –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏
            placeholder.empty()
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.6":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.6 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            st.text('–≠–ª–µ–º–µ–Ω—Ç st.expander')

            with st.expander("–ì—Ä–∞—Ñ–∏–∫ Pandas"):
                st.bar_chart({"data": [1, 5, 2, 6, 2, 1]})

            with st.expander("–û—Ç–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ st.expander"):
                st.write('''
                   –ê–∫–∞–¥–µ–º–∏—è Python. –¶–∏—Ñ—Ä–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–∏–≥–∏, —É—á–µ–±–Ω–∏–∫–∏
                    –∏ —É—á–µ–±–Ω—ã–µ –ø–æ—Å–æ–±–∏—è.
                ''')
                st.image("AP_400.png")

            expander = st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL")
            expander.write('–≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ —Å–µ—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç')
            expander.image("https://static.streamlit.io/examples/dice.jpg")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.7":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.7 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            st.text('–≠–ª–µ–º–µ–Ω—Ç st.forma')

            with st.form("my_form"):
                # –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
                st.write("–¢–µ–∫—Å—Ç –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ñ–æ—Ä–º—ã")
                slider_val = st.slider("–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞")
                checkbox_val = st.checkbox("–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å")
                # –ö–Ω–æ–ø–∫–∞
                submitted = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

            st.write("–¢–µ–∫—Å—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ñ–æ—Ä–º—ã")
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
            if submitted:
                st.write("–ó–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞:", slider_val,
                         "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è", checkbox_val)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.8":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.8 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            st.text('–≠–ª–µ–º–µ–Ω—Ç st.popover')

            # –í–∫–ª—é—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ—Ä–µ–∑ with
            pop = st.popover("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å")
            with pop:
                st.markdown("–î–æ–±—Ä—ã–π –¥–µ–Ω—å üëã")
                email = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å")

            st.write("–í–∞—à–∞ –ø–æ—á—Ç–∞:", email)

            # –í–∫–ª—é—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞
            popover = st.popover("–§–∏–ª—å—Ç—Ä —Ü–≤–µ—Ç–æ–≤ —à—Ä–∏—Ñ—Ç–∞")
            red = popover.checkbox("–í–∫–ª—é—á–∏—Ç—å –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç", False)
            blue = popover.checkbox("–í–∫–ª—é—á–∏—Ç—å —Å–∏–Ω–∏–π —Ü–≤–µ—Ç", False)

            if red:
                st.write(":red[–î–æ—Å—Ç—É–ø–µ–Ω –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç.]")
            if blue:
                st.write(":blue[–î–æ—Å—Ç—É–ø–µ–Ω —Å–∏–Ω–∏–π —Ü–≤–µ—Ç.]")

            # –í–∫–ª—é—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ—Ä–µ–∑ with
            with st.popover("–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ Pandas", width="stretch"):
                st.bar_chart({"data": [1, 5, 2, 6, 2, 1]})
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.9":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.9 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            st.sidebar.text('–≠–ª–µ–º–µ–Ω—Ç st.sidebar')

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥
            add_selectbox = st.sidebar.selectbox(
                "–ö–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å?",
                ("–ü–æ Email", "–ü–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É", "–ü–æ –º–æ–±–∏–ª—å–Ω–æ–º—É —Ç–µ–ª.")
            )

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ with
            with st.sidebar:
                add_radio = st.radio(
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏",
                    ("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è (5-15 –¥–Ω–µ–π)", "–ë—ã—Å—Ç—Ä–∞—è (2-3 –¥–Ω—è)")
                )
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.10":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.10 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            from numpy.random import default_rng as rng

            st.text('–≠–ª–µ–º–µ–Ω—Ç st.tabs')

            st.text('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
            tab1, tab2, tab3, tab4 = st.tabs(["–ö–æ—à–∫–∞", "–°–æ–±–∞–∫–∞", "–°–æ–≤–∞", "Python"])
            # –í–∫–ª–∞–¥–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º with
            with tab1:
                st.header("–ö–æ—à–∫–∞")
                st.image("https://static.streamlit.io/examples/cat.jpg", width=200)
            with tab2:
                st.header("–°–æ–±–∞–∫–∞")
                st.image("https://static.streamlit.io/examples/dog.jpg", width=200)
            with tab3:
                st.header("–°–æ–≤–∞")
                st.image("https://static.streamlit.io/examples/owl.jpg", width=300)
            with tab4:
                st.header("–ê–∫–∞–¥–µ–º–∏—è Python")
                st.image("AP_400.png", width=300)

            st.text('–î–∞–Ω–Ω—ã–µ Pandas')
            df = rng(0).standard_normal((5, 1))

            tab5, tab6 = st.tabs(["üìà –ì—Ä–∞—Ñ–∏–∫", "üóÉ –î–∞–Ω–Ω—ã–µ"], width=400)
            # –í–∫–ª–∞–¥–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ –æ–±—ä–µ–∫—Ç–æ–≤
            tab5.subheader("–í–∫–ª–∞–¥–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º")
            tab5.line_chart(df)

            tab6.subheader("–í–∫–ª–∞–¥–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏")
            tab6.write(df)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.11":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.11 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            prompt = st.chat_input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            if prompt:
                st.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {prompt}")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.12":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.12 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import numpy as np

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ st.chat_message –ø—Ä–æ–≥—Ä–∞–º–º—ã
            with st.chat_message("user"):
                st.write("–í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ –±–ª–æ–∫–µ with üëã")
                st.line_chart(np.random.randn(20, 3))

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
            message = st.chat_message("assistant")
            message.write("–í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ –æ–±—ä–µ–∫—Ç–∞")
            message.bar_chart(np.random.randn(20, 3))

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            with st.sidebar:
                st.text('–≠–ª–µ–º–µ–Ω—Ç st.chat_message')
                messages = st.container(height=300)
                if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"):
                    messages.chat_message("user").write(f"–í–≤–µ–¥–µ–Ω–æ: {prompt}")
                    messages.chat_message("assistant").write(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {prompt}")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.13":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.13 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st
            import time

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")


            # –§—É–Ω–∫—Ü–∏—è - —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            @st.fragment
            def start_balloons():
                # –ö–Ω–æ–ø–∫–∞ –≤—ã–ø—É—Å–∫–∞ –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤
                st.button("–í—ã–ø—É—Å—Ç–∏—Ç—å –≤–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã",
                          help="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞")
                st.balloons()


            # –ü—Ä–æ—Ü–µ—Å—Å –Ω–∞–¥—É–≤–∞–Ω–∏—è –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤
            with st.spinner("–ñ–¥–∏—Ç–µ...! –ò–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞–¥—É–≤–∞–Ω–∏—è –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤."):
                time.sleep(5)

            # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–ø—É—Å–∫–∞ –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤
            start_balloons()

            # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            st.button("–ù–∞–¥—É—Ç—å –≤–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã –∏ –≤—ã–ø—É—Å—Ç–∏—Ç—å",
                      help="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.14":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.14 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –ó–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if "app_runs" not in st.session_state:
                st.session_state.app_runs = 0
                st.session_state.fragment_runs = 0


            # –§—É–Ω–∫—Ü–∏—è —Å —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            @st.fragment
            def my_fragment():
                st.session_state.fragment_runs += 1
                # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                st.button("–í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç")
                st.write(f"–§—Ä–∞–≥–º–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω {st.session_state.fragment_runs} —Ä–∞–∑.")


            st.session_state.app_runs += 1

            # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º @st.fragment
            my_fragment()

            # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            st.button("–í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            st.write(f"–í—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ {st.session_state.app_runs} —Ä–∞–∑.")
            st.write(f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∏–¥–∏—Ç, —á—Ç–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω {st.session_state.fragment_runs} —Ä–∞–∑.")
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.15":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.15 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            if "value" not in st.session_state:
                st.session_state.value = "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"

            ##### –û–ø—Ü–∏—è –≤—ã–∑–æ–≤–∞ st.rerun #####
            st.header(st.session_state.value)
            if st.button("–°–º–µ–Ω–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫"):
                st.session_state.value = "–ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫"
                st.rerun()

            ##### –û–ø—Ü–∏—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ #####
            st.header(st.session_state.value)

            def update_value():
                st.session_state.value = "–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏"

            st.button("–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏", on_click=update_value)

            ##### –û–ø—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ #####
            container = st.container()
            if st.button("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä"):
                st.session_state.value = "–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"

            container.header(st.session_state.value)
    elif options == "–õ–∏—Å—Ç–∏–Ω–≥ 5.16":
        st.write('–ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∞ 5.16 –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
        with st.echo(code_location="above"):
            import streamlit as st

            # –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            st.set_page_config(initial_sidebar_state="collapsed")

            # –ó–∞–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—É session
            if 'bt' not in st.session_state:
                st.session_state.disabled = False
            else:
                st.session_state.disabled = True

            txt_1 = st.text('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ')
            txt_2 = st.text('')

            # –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É
            bt = st.button('–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                           key='bt',
                           disabled=st.session_state.disabled)

            # –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            if bt:
                txt_1.text('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
                